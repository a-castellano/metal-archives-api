image: daedalusproject/base_golang_1_13:202001111126

stages:
    - dep
    - test
    - scan
    - deploy

dep:
  stage: dep
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make dep
  artifacts:
    name: "vendor-$CI_PIPELINE_ID"
    paths:
      - vendor/
    expire_in: 1 hour

unit_tests:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - echo $GOPATH
    - pwd
    - make test

race_detector:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make race

memory_sanitizer:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make msan

code_coverage:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make coverage
  artifacts:
    name: "coverage-$CI_PIPELINE_ID"
    paths:
      - coverage.html
      - cover
    expire_in: 1 hour
  coverage: /total:\s+.+\s(\d+\.\d+?)%$/

code_coverage_report:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make coverhtml
  only:
  - master

lint_code:
  stage: test
  before_script:
    - export CC=/usr/bin/clang
    - export GOPATH="$(pwd)/go"
    - mkdir -p "$(pwd)/go"
    - go env -w GOPATH="$(pwd)/go"
    - mkdir -p $GOPATH/src/github.com/a-castellano
    - ln -s ${CI_PROJECT_DIR} $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
    - cd $GOPATH/src/github.com/a-castellano/metal-archives-wrapper
  script:
    - make lint

scan:
  stage: scan
  image: daedalusproject/base_sonar_scanner
  script:
  - sonar-scanner -Dsonar.projectKey=metal-archives-wrapper -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.windmaker.net -Dsonar.login=${SONAR_LOGIN} -Dsonar.exclusions="*/*_test.go" -Dsonar.branch.name="${CI_COMMIT_REF_NAME}"
  dependencies:
  - code_coverage

pages:
  stage: deploy
  image: daedalusproject/base:202001111126
  script:
  - cp coverage.html public/
  artifacts:
    paths:
    - public
  only:
  - master
